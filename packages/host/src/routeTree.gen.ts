/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SearchRouteImport } from './routes/search'
import { Route as CheckoutRouteImport } from './routes/checkout'
import { Route as CarouselRouteImport } from './routes/carousel'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CarouselSplatRouteImport } from './routes/carousel/$'

const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const CarouselRoute = CarouselRouteImport.update({
  id: '/carousel',
  path: '/carousel',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CarouselSplatRoute = CarouselSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => CarouselRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/carousel': typeof CarouselRouteWithChildren
  '/checkout': typeof CheckoutRoute
  '/search': typeof SearchRoute
  '/carousel/$': typeof CarouselSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/carousel': typeof CarouselRouteWithChildren
  '/checkout': typeof CheckoutRoute
  '/search': typeof SearchRoute
  '/carousel/$': typeof CarouselSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/carousel': typeof CarouselRouteWithChildren
  '/checkout': typeof CheckoutRoute
  '/search': typeof SearchRoute
  '/carousel/$': typeof CarouselSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/carousel' | '/checkout' | '/search' | '/carousel/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/carousel' | '/checkout' | '/search' | '/carousel/$'
  id: '__root__' | '/' | '/carousel' | '/checkout' | '/search' | '/carousel/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CarouselRoute: typeof CarouselRouteWithChildren
  CheckoutRoute: typeof CheckoutRoute
  SearchRoute: typeof SearchRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/carousel': {
      id: '/carousel'
      path: '/carousel'
      fullPath: '/carousel'
      preLoaderRoute: typeof CarouselRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/carousel/$': {
      id: '/carousel/$'
      path: '/$'
      fullPath: '/carousel/$'
      preLoaderRoute: typeof CarouselSplatRouteImport
      parentRoute: typeof CarouselRoute
    }
  }
}

interface CarouselRouteChildren {
  CarouselSplatRoute: typeof CarouselSplatRoute
}

const CarouselRouteChildren: CarouselRouteChildren = {
  CarouselSplatRoute: CarouselSplatRoute,
}

const CarouselRouteWithChildren = CarouselRoute._addFileChildren(
  CarouselRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CarouselRoute: CarouselRouteWithChildren,
  CheckoutRoute: CheckoutRoute,
  SearchRoute: SearchRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
